{"ast":null,"code":"var _jsxFileName = \"/home/lyes/Desktop/projects/social/social-v2/client-v2/src/components/feed/Feed.jsx\",\n    _s = $RefreshSig$();\n\nimport Post from \"../post/Post\";\nimport Share from \"../share/Share\";\nimport \"./feed.css\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed(_ref) {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  const {\n    user: currentUser\n  } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = user ? await axios.get(`/api/posts/profile/${user.username}`) : await axios.get(\"/api/posts/timeline/\" + currentUser._id);\n      setPosts(res.data.sort((p1, p2) => new Date(p2.createdAt) - new Date(p1.createdAt)));\n    };\n\n    fetchPosts();\n  }, [user, currentUser._id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedWrapper\",\n      children: [currentUser._id === user._id && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 42\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        post: post\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Feed, \"jkCLJS/o459VYb7QgVKMpRw8pso=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/home/lyes/Desktop/projects/social/social-v2/client-v2/src/components/feed/Feed.jsx"],"names":["Post","Share","useState","useEffect","useContext","axios","AuthContext","Feed","user","currentUser","posts","setPosts","fetchPosts","res","get","username","_id","data","sort","p1","p2","Date","createdAt","map","post"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,YAAP;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AAEA,eAAe,SAASC,IAAT,OAAwB;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACrC,QAAM;AAAEA,IAAAA,IAAI,EAAEC;AAAR,MAAwBL,UAAU,CAACE,WAAD,CAAxC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAGL,IAAI,GACZ,MAAMH,KAAK,CAACS,GAAN,CAAW,sBAAqBN,IAAI,CAACO,QAAS,EAA9C,CADM,GAEZ,MAAMV,KAAK,CAACS,GAAN,CAAU,yBAAyBL,WAAW,CAACO,GAA/C,CAFV;AAGAL,MAAAA,QAAQ,CACNE,GAAG,CAACI,IAAJ,CAASC,IAAT,CACE,CAACC,EAAD,EAAKC,EAAL,KAAY,IAAIC,IAAJ,CAASD,EAAE,CAACE,SAAZ,IAAyB,IAAID,IAAJ,CAASF,EAAE,CAACG,SAAZ,CADvC,CADM,CAAR;AAKD,KATD;;AAUAV,IAAAA,UAAU;AACX,GAZQ,EAYN,CAACJ,IAAD,EAAOC,WAAW,CAACO,GAAnB,CAZM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACGP,WAAW,CAACO,GAAZ,KAAoBR,IAAI,CAACQ,GAAzB,iBAAgC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cADnC,EAEGN,KAAK,CAACa,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAAqB,QAAA,IAAI,EAAEA;AAA3B,SAAWA,IAAI,CAACR,GAAhB;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA1BuBT,I;;KAAAA,I","sourcesContent":["import Post from \"../post/Post\";\nimport Share from \"../share/Share\";\nimport \"./feed.css\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nexport default function Feed({ user }) {\n  const { user: currentUser } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const res = user\n        ? await axios.get(`/api/posts/profile/${user.username}`)\n        : await axios.get(\"/api/posts/timeline/\" + currentUser._id);\n      setPosts(\n        res.data.sort(\n          (p1, p2) => new Date(p2.createdAt) - new Date(p1.createdAt)\n        )\n      );\n    };\n    fetchPosts();\n  }, [user, currentUser._id]);\n  return (\n    <div className=\"feed\">\n      <div className=\"feedWrapper\">\n        {currentUser._id === user._id && <Share />}\n        {posts.map((post) => (\n          <Post key={post._id} post={post} />\n        ))}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}